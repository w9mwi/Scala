Using functions that have multiple parameter groups makes it
easier to create partially-applied functions.

A function that takes multiple arguments (whether or not
those arguments are contained in one or multiple parameter
groups) can be translated into a series of function calls
that each take a single argument.  Assume the following:

f(x) = x + 1
f(y) = f(x) * y
f(z) = (f(y)) ^ 2

If x = 2, and y = 4, and z = 3, the following is true...

f(x) = 2 + 1  = 3
f(y) = 3 * 4  = 12
f(z) = 12 ^ 3 = 1728

In order to fully evalaute f(z), f(x) must be evaluated first,
f(y) must be evaluated second, and f(z) must be evaluated last.
In other words, both f(x) and f(y) are partial functions of f(z).

This means when f(x) is exalauted, f(z) is partially applied.
And when f(y) is evaluated, f(z) is again partially applied.
Therefore, f(z) obtains its result via partially-applied
functions.

