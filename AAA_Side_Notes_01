Page 156-157
Every object in Scala is an instance the Any object, which is the top object
in the object tree.  So every other object in Scala is a child of the Any object.
At the bottom of the object tree is the Nothing object, which is a subtype
(a child) of ALL Scala objects.  The Nothing object exists to handle situations
where functions never return.

Page 230
Scala provides 3 constructs for creating user-defined types:
1) classes
2) traits
3) objects - Singleton objects, meaning "static" (only one instance) objects.

==================================================================

Every object in Scala is an instance of the "Any" object, because the
"Any" object is the parent of ALL other objects.  The Any object is
the direct parent of these two objects: AnyVal and AnyRef

The "Nothing" object (which has no value) is a subtype of ALL Scala
objects, and it exists to handle situations when functions don't
return a value.
==================================================================
OBJECT-ORIENTED PROGRAMMING (PAGE 394)

An object contains both data and functonality that operates on that
data.  A class is a blueprint for an object.  Functions/Methods that
operate on a class's data are NOT allowed in case classes--only in
standard classes.

When a regular class is instantiated, it creates an object that has
a "type" of the defined class.  Case classes do NOT contain curly
braces, as do regular classes.  Case classes also do NOT contain
methods/functions, or vals/vars defined within curly braces.  For
case classes, all val/var data is defined as parameters passed to
the case class when it's instantiated.
