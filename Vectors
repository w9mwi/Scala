Scala Vectors are very similar to Scala Lists.  If you only need to process the head
of a List, then use a List.  But if you need to access elements within the List,
as well as process the List's head, use a Vector because accessing indexed elements
in a Vector is more efficient than accessing indexed elements in a List.

A Scala Vector is immutable, whereas a Scala Array is mutable.
A Scala List can be mutable or immutable.
==================================================================================
import scala.collection.immutable.Vector

object Demo
{
  def main(args: Array[String]) =
  {
    var vect:Vector[String] = Vector("A", "B", "C", "D", "E", "F")
    println("A) " + vect)              // PRINTS: A) Vector(A, B, C, D, E, F)
    println("B) vect(4) = " + vect(4)) // PRINTS: B) vect(4) = E

    // The updated() method below does NOT alter the contents
    // of vect, as Vectors are immutable.
    println("C) " + vect.updated(1, "X")) // PRINTS: C) Vector(A, X, C, D, E, F)
    println("D) " + vect)                 // PRINTS: D) Vector(A, B, C, D, E, F)

    // To obtain a Vector where the updated() method "changes" the value of a Vector
    // element, you need obtain the new Vector that the updated() method returns...
    vect = vect.updated(1, "X")
    println("E) " + vect) // PRINTS: E) Vector(A, X, C, D, E, F)
  }
}
==================================================================================
