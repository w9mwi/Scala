LOOPING CONSTRUCTS
=====================================================
do
{
   statement(s);
} 
while(condition);

// -------------------------------------------------------
// for() loop examples...

val tomsList:List[Int] = List(95, 96, 97, 98, 99, 100)
val evenNumbers:Range  = new Range(0, 10, 2)
val oddNumbers:Range   = new Range(1, 9, 2)

// NOTE: The 'number' variable used below is NOT declared before it's used....
for (number <- evenNumbers)
{
  println( "number = " + number);
}
for (number <- oddNumbers)
{
  println( "number = " + number);
}
for (number <- tomsList.reverse)
{
  println( "number = " + number);
}

// if() statements embedded within a for() loop as shown
// below are known as "guards".  When the if() statement
// is true, the for() loop is exited.  The following TWO
// if() statements have identical behavior...
for
{
  i <- 0 to 10
  if (i % 2 == 0  &&  i > 5)
}
println(i)

for
{
  i <- 0 to 10
  if i % 2 == 0
  if i > 5
}
println(i)


// -------------------------------------------------------
// How to break out of a loop...
val numList = List(1,2,3,4,5,6,7,8,9,10);
val loop    = new Breaks;
loop.breakable
{
  // NOTE: The 'number' variable used below is NOT declared before it's used....
  for (number <- numList)
  {
    println("number = " + number );// -------------------------------------------------------

    if (number == 4)
    {
      println("Here, we 'break' out of the for() loop, when number = " + number);
      loop.break;
    }
  }
}
