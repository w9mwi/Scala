In Scala, a class that's defined inside another class is termed as an "inner class".
An inner class is bound to the outer object.

object Demo
{
  class Add // Add is an OUTER CLASS.
  {
    class AddTwoNumbers // AddTwoNumbers is an INNER CLASS.
    {
      var a = 12
      var b = 31
      def c = a + b
    }
  }

  def main(args:Array[String]): Unit =
  {
    val add1 = new Add
    val add2 = new Add
    val b1   = new add1.AddTwoNumbers
    val b2   = new add2.AddTwoNumbers

    println(s"b1.a = ${b1.a}") // PRINTS: b1.a = 12
    println(s"b1.b = ${b1.b}") // PRINTS: b1.b = 31
    println(s"b1.c = ${b1.c}") // PRINTS: b1.c = 43  (Because 12 + 31 = 43)

    b1.a = 12
    b1.b = 34
    b2.a = 56
    b2.b = 78
    println(s"b1.a = ${b1.a}") // PRINTS: b1.a = 12
    println(s"b1.b = ${b1.b}") // PRINTS: b1.b = 34
    println(s"b1.c = ${b1.c}") // PRINTS: b1.c = 46  (Because 12 + 34 = 46)
    println(s"b2.a = ${b2.a}") // PRINTS: b2.a = 56
    println(s"b2.b = ${b2.b}") // PRINTS: b2.b = 78
    println(s"b2.c = ${b2.c}") // PRINTS: b2.c = 134 (Because 56 + 78 = 134)
  }
}
