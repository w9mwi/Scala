This page describes how to use the Scala types
"Either" and "Try".  NOTE: The "Try" type is not
that same as the "try" Scala keyword that's used
with "catch".

The Option/Some/None classes are similar to the
Try/Failure/Success classes...
SEE ALSO --> https://github.com/w9mwi/Scala/blob/master/Option_Some_None_Classes

Just like the "Option" type will always have a subclass
"Some " or "None", the "Either" type will always have
a subclass of "Success" or "Failure".  Where "Failure"
contains the reason why something failed.

The following code example is an alternative to using Option/Some/None,
as seen on this page...
--> https://github.com/w9mwi/Scala/blob/master/Option_Some_None_Classes
========================================================================
object Demo
{
  import scala.util.{Try, Success, Failure}

  def convertStringToInt(str:String):Try[Int] =
  {
    Try(str.trim.toInt)
  }

  def printNumber(strNumber:Try[Int]):Unit =
  {
    strNumber match
    {
      case Success(strNumber) => println ("number = " + strNumber)
      case Failure(excepMsg)  => println ("Failure message = " + excepMsg)
    }
  }

  def main(args:Array[String]): Unit =
  {
    val validStringNumber:String   = "123456";
    val invalidStringNumber:String = "12345X";
    var intNumber:Try[Int] = convertStringToInt(validStringNumber)
    printNumber(intNumber) // PRINTS: number = 123456

    intNumber = convertStringToInt(invalidStringNumber)
    printNumber(intNumber) // PRINTS: Failure message = java.lang.NumberFormatException: For input string: "12345X"

    intNumber = for {
                      a <- convertStringToInt(validStringNumber)
                      b <- convertStringToInt(validStringNumber)
                    } yield a + b
    printNumber(intNumber) // PRINTS: number = 246912

    intNumber = for {
                      a <- convertStringToInt("1")
                      b <- convertStringToInt(invalidStringNumber)
                    } yield a + b
    printNumber(intNumber) // PRINTS: Failure message = java.lang.NumberFormatException: For input string: "12345X"
  }
}
