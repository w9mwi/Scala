
The majority of classes in the java.io pakage are subtypes of
one of these four different abstract types:

___ InputStream - The basic methods work on bytes  Here are some of them:
                  ___ available():Int
                  ___ close():Unit
                  ___ mark(readLimit:Int):Unit
                  ___ markSupported():Boolean
                  ___ read():Int - An abstract method.  Returns a -1 when the end of stream is reached
                                   Otherwise, returns the value of the next byte in the stream as an
                                   Int in the range 0-255.
                  ___ read(b:Array[Byte]):Int
                  ___ read(b:Array[Byte], off:Int, len:Int):Int
                  ___ reset():Unit
                  ___ skip(long n):Long
                  
___ OutputStream - The basic operations work on bytes.  Here are some of them:
                   ___ close():Unit
                   ___ flush():Unit
                   ___ write(b:Array[Byte]):Unit
                   ___ write(b:Array[Byte], off:Int, len:Int):Unit
                   ___ write(b:Int):Unit - An abstract method.  The lowest 8 bits of the Int
                                           are written, the other 24 bits are ignored.
___ Reader - The basic operations work on characters.
___ Writer - The basic operations work on characters.

Remember, the above methods come from the java.io package.  Refer to the Java
API for docs:  https://docs.oracle.com/javase/9/docs/api/overview-summary.html

